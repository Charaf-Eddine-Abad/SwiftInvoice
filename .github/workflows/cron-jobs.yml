name: SwiftInvoice Cron Jobs

on:
  # Schedule the jobs to run automatically - DISABLED TO STOP ERROR EMAILS
  # schedule:
  #   # Recurring invoices - every day at 9:00 AM UTC
  #   - cron: '0 9 * * *'
  #   # Reminders - every day at 10:00 AM UTC  
  #   - cron: '0 10 * * *'
  
  # Allow manual triggering from GitHub UI
  workflow_dispatch:
    inputs:
      job_type:
        description: 'Which cron job to run'
        required: true
        default: 'both'
        type: choice
        options:
        - both
        - recurring
        - reminders

jobs:
  recurring-invoices:
    name: Process Recurring Invoices
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'workflow_dispatch' && (github.event.inputs.job_type == 'both' || github.event.inputs.job_type == 'recurring')
    
    steps:
      - name: Process Recurring Invoices
        run: |
          echo "üîÑ Processing recurring invoices..."
          
          # Debug: Check if secrets are set
          if [ -z "${{ secrets.APP_URL }}" ]; then
            echo "‚ùå APP_URL secret is not set"
            exit 1
          fi
          
          if [ -z "${{ secrets.CRON_SECRET }}" ]; then
            echo "‚ùå CRON_SECRET is not set"
            exit 1
          fi
          
          # Ensure APP_URL has https:// and no trailing slash
          APP_URL="${{ secrets.APP_URL }}"
          if [[ ! "$APP_URL" =~ ^https?:// ]]; then
            APP_URL="https://$APP_URL"
          fi
          APP_URL=$(echo "$APP_URL" | sed 's:/*$::')
          
          echo "üîó Using URL: $APP_URL/api/cron/recurring"
          echo "üîë Using secret: ${CRON_SECRET:0:10}..."
          
          response=$(curl -s -X POST "$APP_URL/api/cron/recurring" \
            -H "Authorization: Bearer ${{ secrets.CRON_SECRET }}" \
            -H "Content-Type: application/json" \
            -w "HTTPSTATUS:%{http_code}")
          
          http_code=$(echo $response | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
          body=$(echo $response | sed -e 's/HTTPSTATUS:.*//g')
          
          echo "Response: $body"
          
          if [ $http_code -eq 200 ]; then
            echo "‚úÖ Recurring invoices processed successfully"
            echo "$body" | jq -r '.message // "No message"'
            if echo "$body" | jq -e '.results[]' > /dev/null 2>&1; then
              echo "Results:"
              echo "$body" | jq -r '.results[] | "  - \(.status): \(.invoiceNumber // .error)"'
            fi
          else
            echo "‚ùå Failed to process recurring invoices (HTTP $http_code)"
            echo "$body" | jq -r '.error // "Unknown error"'
            exit 1
          fi

  reminders:
    name: Send Invoice Reminders
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'workflow_dispatch' && (github.event.inputs.job_type == 'both' || github.event.inputs.job_type == 'reminders')
    
    steps:
      - name: Send Invoice Reminders
        run: |
          echo "üìß Sending invoice reminders..."
          
          # Debug: Check if secrets are set
          if [ -z "${{ secrets.APP_URL }}" ]; then
            echo "‚ùå APP_URL secret is not set"
            exit 1
          fi
          
          if [ -z "${{ secrets.CRON_SECRET }}" ]; then
            echo "‚ùå CRON_SECRET is not set"
            exit 1
          fi
          
          # Ensure APP_URL has https:// and no trailing slash
          APP_URL="${{ secrets.APP_URL }}"
          if [[ ! "$APP_URL" =~ ^https?:// ]]; then
            APP_URL="https://$APP_URL"
          fi
          APP_URL=$(echo "$APP_URL" | sed 's:/*$::')
          
          echo "üîó Using URL: $APP_URL/api/cron/reminders"
          echo "üîë Using secret: ${CRON_SECRET:0:10}..."
          
          response=$(curl -s -X POST "$APP_URL/api/cron/reminders" \
            -H "Authorization: Bearer ${{ secrets.CRON_SECRET }}" \
            -H "Content-Type: application/json" \
            -w "HTTPSTATUS:%{http_code}")
          
          http_code=$(echo $response | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
          body=$(echo $response | sed -e 's/HTTPSTATUS:.*//g')
          
          echo "Response: $body"
          
          if [ $http_code -eq 200 ]; then
            echo "‚úÖ Reminders sent successfully"
            echo "$body" | jq -r '.message // "No message"'
            if echo "$body" | jq -e '.results[]' > /dev/null 2>&1; then
              echo "Results:"
              echo "$body" | jq -r '.results[] | "  - \(.status): \(.invoiceNumber // .error)"'
            fi
          else
            echo "‚ùå Failed to send reminders (HTTP $http_code)"
            echo "$body" | jq -r '.error // "Unknown error"'
            exit 1
          fi

  # Optional: Add a test job that can be run manually
  test-cron:
    name: Test Cron Jobs
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.job_type == 'both'
    
    steps:
      - name: Test Recurring Invoices
        run: |
          echo "üß™ Testing recurring invoices..."
          response=$(curl -s -X POST "${{ secrets.APP_URL }}/api/cron/recurring" \
            -H "Authorization: Bearer ${{ secrets.CRON_SECRET }}" \
            -H "Content-Type: application/json" \
            -w "HTTPSTATUS:%{http_code}")
          
          http_code=$(echo $response | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
          body=$(echo $response | sed -e 's/HTTPSTATUS:.*//g')
          
          if [ $http_code -eq 200 ]; then
            echo "‚úÖ Recurring invoices test passed"
            echo "$body" | jq -r '.message // "No message"'
          else
            echo "‚ùå Recurring invoices test failed (HTTP $http_code)"
            echo "$body" | jq -r '.error // "Unknown error"'
          fi
      
      - name: Test Reminders
        run: |
          echo "üß™ Testing reminders..."
          response=$(curl -s -X POST "${{ secrets.APP_URL }}/api/cron/reminders" \
            -H "Authorization: Bearer ${{ secrets.CRON_SECRET }}" \
            -H "Content-Type: application/json" \
            -w "HTTPSTATUS:%{http_code}")
          
          http_code=$(echo $response | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
          body=$(echo $response | sed -e 's/HTTPSTATUS:.*//g')
          
          if [ $http_code -eq 200 ]; then
            echo "‚úÖ Reminders test passed"
            echo "$body" | jq -r '.message // "No message"'
          else
            echo "‚ùå Reminders test failed (HTTP $http_code)"
            echo "$body" | jq -r '.error // "Unknown error"'
          fi